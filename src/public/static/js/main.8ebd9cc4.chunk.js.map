{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","actions/events.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendaEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","user","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendaEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","myEventsList","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","background","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuth","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ebd9cc4.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[UI] Open Modal',\r\n    uiCloseModal: '[UI] Close Modal',\r\n\r\n\r\n    eventLogout: '[event] Event Logout',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add New',\r\n    eventSetActive: '[event] Set Active',\r\n    eventClearActiveEvent: '[event] Clear Active Event',\r\n    eventUpdated: '[event] Event Updated',\r\n    eventDeleted: '[event] Event Deleted',\r\n    eventLodaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[AUTH] Finish Checking login state',\r\n    authStartLogin: '[AUTH] Start Login',\r\n    authLogin: '[AUTH] Login',\r\n    authStartRegister: '[AUTH] Start Register',\r\n    authRegister: '[AUTH] Register',\r\n    authStartTokenRenew: '[AUTH] Start Token Renew',\r\n    authLogout: '[AUTH] Logout',\r\n\r\n\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n    \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Birthdays boss',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     notes: 'buy the candys',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Mariano'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [ ...state.events, action.payload ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n    \r\n        case types.eventUpdated: \r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id) \r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLodaded: \r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                events: [],\r\n                activeEvent: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n    \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n    // TODO: authReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )    \r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if(method === 'GET') {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n    \r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET') {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchSinToken, fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        \r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n       if( body.ok ) {\r\n           localStorage.setItem('token', body.token);\r\n           localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n           dispatch( login({\r\n               uid: body.uid,\r\n               name: body.name\r\n           }) );\r\n       } else {\r\n           Swal.fire('Error', body.msg, 'error');\r\n       }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n       if( body.ok ) {\r\n           localStorage.setItem('token', body.token);\r\n           localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n           dispatch( login({\r\n               uid: body.uid,\r\n               name: body.name\r\n           }));\r\n       } else {\r\n           dispatch( checkingFinish() )\r\n       }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish})\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({type: types.authLogout});","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './login.css';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'mariano@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Liz',\r\n        rEmail: 'liz@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    });\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin(lEmail, lPassword) );\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas no coinciden', 'error')\r\n        }\r\n\r\n        dispatch( startRegister(rEmail, rPassword1, rName) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin } >\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister } >\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import moment from 'moment';\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n\r\n    return events.map(e => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate()\r\n    }));\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async (dispatch, getState) => {\r\n        \r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken( 'events', event, 'POST' );\r\n            const body = await resp.json();\r\n\r\n            if(body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                };\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n        \r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({ \r\n    type: types.eventAddNew, \r\n    payload: event \r\n});\r\n\r\nexport const eventSetActive = (event) => ({ type: types.eventSetActive, payload: event });\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken( `events/${ event.id }`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if(body.ok) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDeleted = ()=> {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchConToken( `events/${ id }`, {} , 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if(body.ok) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n \r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n            const events = prepareEvents( body.eventos );\r\n            dispatch( eventLoaded(events) )\r\n            \r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLodaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout })","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventLogout } from '../../actions/events';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() )\r\n        dispatch( eventLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button onClick={ handleLogout } className=\"btn btn-outline-danger\">\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendaEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <span> { title } </span>\r\n            <strong>- { user.name } </strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent) {\r\n            setFormValues( activeEvent )\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    } \r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n        }\r\n        if(title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        // TODO: Realizar grabacion en BD\r\n\r\n        if( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) );\r\n        } else {\r\n            dispatch( eventStartAddNew(formValues ) );\r\n        }\r\n        \r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n        //   onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            \r\n\r\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form onSubmit={ handleSubmitForm } className=\"container\">\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <button\r\n            onClick={ () => dispatch( uiOpenModal() ) }\r\n            className=\"btn btn-primary fab\" \r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDeleted() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            onClick={ handleDelete }\r\n            className=\"btn btn-danger fab-danger\"\r\n        >\r\n            <i className=\"fas fa-trash\" ></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendaEvent } from './CalendaEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { events:myEventsList, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive(e) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const eventSyleGetter = (event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            background: (uid === event.user._id) ? '#3676fc' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n           <Navbar />\r\n\r\n           <Calendar\r\n                localizer={localizer}\r\n                events={myEventsList}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventSyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={true}\r\n                view={ lastView }\r\n                components={{ \r\n                    event: CalendaEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                activeEvent && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ isAuth, component: Component, ...rest }) => {\r\n  \r\n    return (\r\n        <Route \r\n            {...rest} \r\n            component={ (props) => (\r\n                (isAuth)\r\n                ? <Component { ...props } />\r\n                : <Redirect to=\"/login\" />\r\n            )}   \r\n        />\r\n    );\r\n    \r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({ isAuth, component: Component, ...rest }) => {\r\n    return (\r\n        <Route \r\n            { ...rest }\r\n            component={ (props) => (\r\n                (isAuth)\r\n                ? <Redirect to=\"/\" />\r\n                : <Component { ...props } />\r\n            )} \r\n        />\r\n        \r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [dispatch]);\r\n\r\n    if(checking) {\r\n        return (<h1>Espere...</h1>)\r\n    }\r\n\r\n    return (\r\n       <Router>\r\n           <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen }\r\n                        isAuth={ !!uid } />\r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen }\r\n                        isAuth={ !!uid } />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n           </div>\r\n       </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store } >\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}